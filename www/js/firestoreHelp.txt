*** TIP: USER VARIABLES FOR PATH'S


**ADD SESSION FOR SPECIFIED USER, FILL <...> WITH DATA(DATE,LOCATION,EXERCISES,DURATION), ELSE EMPTY : (SEE MORE IN DOCUMENTATION)
    
    fs.collection("Users").doc(user.uid).collection("Sessions").add({...})


**GET DATA FROM COLLECTION WITH CONDITION (QUERY EXAMPLE LOCATION == "MASUI") :

    firebase.firestore().collection("Users").doc(user.uid).collection("Sessions").where("Location", "==", "masui")
    .get()
    .then((querySnapshot) => {
        querySnapshot.forEach((doc) => {
            // doc.data() is never undefined for query doc snapshots
            console.log(doc.id, " => ", doc.data());
        });
    })
    .catch((error) => {
        console.log("Error getting documents: ", error);
    });


**GET ALL DATA FROM COLLECTION :

    firebase.firestore().collection("Users").doc(user.uid).collection("Sessions").get().then((querySnapshot) => {
    querySnapshot.forEach((doc) => {
        // doc.data() is never undefined for query doc snapshots
        console.log(doc.id, " => ", doc.data());
        });
    });


** UPDATE PROCESS:
    1- FIND DESIRED DOC => (DOC.ID), 
    2- UPDATE THE DOCUMENT'S DATA FOUND DOC.ID
    3- SHOW RESULT

    firebase.firestore().collection("Users").doc(<UID>).collection("Sessions").where(<CONDTION>)
    .get()
    .then((querySnapshot) => {
        querySnapshot.forEach((doc) => {
            // doc.data() is never undefined for query doc snapshots

            // 1-FOUND DATA 
            console.log(doc.id, " => ", doc.data());

            // 2-UPDATE DATA INSIDE DOC
            firebase.firestore().collection("Users").doc(<UID>).collection("Sessions").doc(doc.id).update({
                <KEY>: <VALUE>
            });

            // 3-SHOW ALL DOCS INSIDE PARENT COLLECTION (CF. GET ALL DATA FROM COLLECTION)
            firebase.firestore().collection("Users").doc(<UID>).collection("Sessions").get().then((querySnapshot) => {
                querySnapshot.forEach((doc) => {
                // doc.data() is never undefined for query doc snapshots
                console.log(doc.id, " => ", doc.data());
                });
            });
        });
    })
    .catch((error) => {
        console.log("Error getting documents: ", error);
    });


** DELETE PROCESS:
    1- FIND DESIRED DOC => (DOC.ID), 
    2- DELETE THE DOCUMENT'S DATA FOUND DOC.ID
    3- SHOW RESULT

    firebase.firestore().collection("Users").doc(user.uid).collection("Sessions").where(<CONDTION>)
        .get()
        .then((querySnapshot) => {
            querySnapshot.forEach((doc) => {
                // doc.data() is never undefined for query doc snapshots

                // 1-FOUND DATA
                console.log(doc.id, " => ", doc.data());

                // 2-DELETE DATA INSIDE DOC
                firebase.firestore().collection("Users").doc(user.uid).collection("Sessions").doc(doc.id).delete();

                // 3-SHOW ALL DOCS INSIDE PARENT COLLECTION (CF. GET ALL DATA FROM COLLECTION)
                firebase.firestore().collection("Users").doc(user.uid).collection("Sessions").get().then((querySnapshot) => {
                    querySnapshot.forEach((doc) => {
                    // doc.data() is never undefined for query doc snapshots
                    console.log(doc.id, " => ", doc.data());
                    });
                });
            });
        })
        .catch((error) => {
            console.log("Error getting documents: ", error);
        });   


